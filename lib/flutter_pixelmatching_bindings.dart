// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// FFI bindings for OpenCV
class PixelMatchingBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  PixelMatchingBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  PixelMatchingBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void init() {
    return _init();
  }

  late final _initPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('init');
  late final _init = _initPtr.asFunction<void Function()>();

  ffi.Pointer<ffi.Char> version() {
    return _version();
  }

  late final _versionPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>('version');
  late final _version =
      _versionPtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.UnsignedChar> extractFeaturesAndEncodeToJpeg(
    ffi.Pointer<ffi.UnsignedChar> arg0,
    int arg1,
    int arg2,
  ) {
    return _extractFeaturesAndEncodeToJpeg(
      arg0,
      arg1,
      arg2,
    );
  }

  late final _extractFeaturesAndEncodeToJpegPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.UnsignedChar> Function(ffi.Pointer<ffi.UnsignedChar>,
              ffi.Int, ffi.Int)>>('extractFeaturesAndEncodeToJpeg');
  late final _extractFeaturesAndEncodeToJpeg =
      _extractFeaturesAndEncodeToJpegPtr.asFunction<
          ffi.Pointer<ffi.UnsignedChar> Function(
              ffi.Pointer<ffi.UnsignedChar>, int, int)>();
}

const int __bool_true_false_are_defined = 1;

const int true1 = 1;

const int false1 = 0;
